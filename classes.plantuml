@startuml classes

class Game implements Serializable {

    - int id
    - Boolean onGoing
    - Statistics blueStat,redStat
    - ListCard cards
    - Boolean blueTurn
    - int remainingCardGuess
    - int cols
    - Image QRCode

    + Game(int cols, ListCard cards,int numberOfBlueCard, int numberOfRedCard)

    + Image getQRCode()
    + void setQRCode()
    + int getCols()
    + Statistics getBlueStatistics()
    + Statistics getRedStatistics()
    + int getRemainingCardGuess()
    + void setRemainingCardGuess(int remainingCardGuess)
    + int getId()
    + ListCard getListCard()
    + Boolean isBlueTurn()
    + CardType getColorTurn()
    + void changeTurn(int remainingCardGuess)
    + void ends()
    + Boolean isOnGoing()
    + void correctGuess()
    + void wrongGuess()
    + int getNumberOfOpponentRemainingCardsToFind()
    + int getNumberOfRemainingCardsToFind()
    + generateColorsString()
    + String generateURL()
    + void generateQRCode()
}

class GameDB {
    + {static} Game load(int id)
    + {static} Boolean save(ListCard listCard)
    + {static} Boolean delete(int id)
}

GameDB - Game

GameController -- Game

class GameController {

    + GameController()
    + GameController(Game game)
    + void initialize()
    - void processCardSelection(Card card)
    - void alertWrongGuest(String message)
    + void handleChangeTurn()
    - Optional<String> askForNumberGuess()
}

abstract class Card {
    - CardType cardType
    - Boolean guessed

    + Card(CardType cardType)
    + void guessed()
    + Boolean isGuessed()
    + CardType getCardType()
    + Color getColor()
    + char getColorCode()
}

Card o-- CardType

enum CardType {

    Black
    White
    Red
    Blue
}

class ListCard implements Serializable {
    - int id

    + ListCard()
    + int getId()
    + ListCard getListCard()
    + void addCard(Card card)*
    + List<Card> getCards()
    - ListCard(List<Card> cards)
    + ListCard extract(int n)
}

ListCard -- "*" Card
Game o-- ListCard

class TextCard extends Card {
    - String text

    + TextCard(CardType cardType, String text)
    + String getText()
}

class ImageCard extends Card {
    - String url

    + ImageCard(CardType cardType, String url)
    + String getUrl()
}

class ListCardDB {

    + {static} ListCard load()
    + {static} Boolean save(ListCard listCard)
    + {static} Boolean delete(int id)
}

ListCardDB - ListCard

class Statistics {
    - double averageTimePerTurn
    - double averageCardsPerTurn
    - int numberOfErrors
    - int numberOfTurns
    - int numberOfGuess
    - int numberOfRemainingCardsToFind

    + Statistics(int numberOfCard)
    + int getNumberOfRemainingCardsToFind()
    + void decrNumberOfRemainingCardsToFind()
    + double getAverageTimePerTurn()
    + double getAverageCardsPerTurn()
    + int getNumberOfErrors()
    + void incrNumberOfErrors()
    + int getNumberOfTurns()
    + void incrNumberOfTurns()
    + void incrNumberOfGuess()
    + String toString() 
    + void calculStat()

}

Game o-- "2" Statistics

@enduml
